name: CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dépot
        uses: actions/checkout@v3

      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Créer un fichier .env
        run: |
          echo "MYSQL_HOST=mysql" > .env
          echo "MYSQL_DB_NAME=mydb" >> .env
          echo "MYSQL_DATABASE=mydb" >> .env
          echo "MYSQL_ROOT_PASSWORD=root" >> .env
          echo "MYSQL_PASSWORD=pass" >> .env
          echo "MYSQL_USER=user" >> .env
          echo "MONGODB_HOST=mongo" >> .env
          echo "MONGODB_NAME=mydbmongo" >> .env
          echo "MONGODB_INITDB_ROOT_USERNAME=user" >> .env
          echo "MONGODB_INITDB_ROOT_PASSWORD=pass" >> .env
          echo "MONGODB_URL=mongodb://user:pass@mongo-db:27017/mydbmongo" >> .env

      - name: Composer le docker
        run: |
          docker build -t labo1-store-manager .
          docker compose up -d
          
      #sudo ufw allow 3306/tcp
      - name: Vérifier que les bases de données sont parties
        run: |
          sudo ufw status
          ps -ef
          ss -ltpn
          hostnamectl
          systemctl status mysql
          mysql -u root -proot --port=3307 --host=127.0.0.1 mysql
          SELECT @@port;

      - name: Tester le python
        #run: docker compose exec store_manager_app pytest
        run: docker compose exec store_manager_app bash -c "cd src && python store_manager.py"
