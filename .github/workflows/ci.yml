name: CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dépot
        uses: actions/checkout@v3

      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      
      - name: Rajouter le projet au PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE:$GITHUB_WORKSPACE/src:$PYTHONPATH" >> $GITHUB_ENV

      - name: Créer fichier .env
        uses: SpicyPizza/create-envfile@v1
        with:
          file_name: .env
          envkey_MYSQL_HOST: mysql-db
          envkey_MYSQL_DB_NAME: mydb
          envkey_MYSQL_DATABASE: mydb
          envkey_MYSQL_ROOT_PASSWORD: root
          envkey_MYSQL_PASSWORD: pass
          envkey_MYSQL_USER: user
          envkey_MONGODB_HOST: mongo
          envkey_MONGODB_NAME: mydbmongo
          envkey_MONGODB_INITDB_ROOT_USERNAME: user
          envkey_MONGODB_INITDB_ROOT_PASSWORD: pass
          envkey_MONGODB_URL: mongodb://user:pass@mongo-db:27017/mydbmongo
          envkey_DB_USERNAME: user
          envkey_DB_PASSWORD: pass

      - name: Composer le docker
        run: |
          docker build -t labo1-store-manager .
          docker compose up -d

      - name: Rajouter le projet au PYTHONPATH du docker
        run: docker compose exec store_manager_app echo "PYTHONPATH=$GITHUB_WORKSPACE:$GITHUB_WORKSPACE/src:$PYTHONPATH" >> $GITHUB_ENV

      - name: Tester le python
        run: docker compose exec store_manager_app pytest
